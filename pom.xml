<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>me.wanx.file.server</groupId>
  <artifactId>FileServer</artifactId>
  <packaging>war</packaging>
  <version>0.0.1-SNAPSHOT</version>
  <name>FileServer Webapp</name>
  <url>http://maven.apache.org</url>
  
  <properties>
  		<!-- common setting -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.build.jdk.version>1.6</project.build.jdk.version>
		<!-- maven plugins setting -->
		<maven.compiler.plugin.version>2.3.2</maven.compiler.plugin.version>
		<maven.surefire.plugin.version>2.12</maven.surefire.plugin.version>
		<maven.failsafe.plugin.version>2.12</maven.failsafe.plugin.version>
		<surefire.junit47.version>2.12</surefire.junit47.version>
		<cobertura.maven.plugin.version>2.5.1</cobertura.maven.plugin.version>
		<maven.resources.plugin.version>2.5</maven.resources.plugin.version>
		<maven.war.plugin.version>2.2</maven.war.plugin.version>
		<maven.war.plugin.directory>src/main/webapp/WEB-INF</maven.war.plugin.directory>
		<maven.war.plugin.targetPath>WEB-INF</maven.war.plugin.targetPath>
		<maven.jar.plugin.version>2.4</maven.jar.plugin.version>
		<maven.deploy.plugin.version>2.7</maven.deploy.plugin.version>
		<jetty.version>8.1.5.v20120716</jetty.version>
		<sonar.maven.plugin.version>2.14</sonar.maven.plugin.version>
		<!-- logging -->
		<!-- <logback.version>1.0.1</logback.version> -->
		<slf4j.version>1.6.4</slf4j.version>
		<log4j.version>1.2.16</log4j.version>
		<!-- <log4jdbc4.version>1.2</log4jdbc4.version> -->
		<!-- test settings -->
		<junit.version>4.10</junit.version>
		<!-- general utils settings -->
		<commons.lang.version>2.6</commons.lang.version>
		<commons.lang3.version>3.1</commons.lang3.version>
		<commons.beanutils.version>1.8.3</commons.beanutils.version>
		<commons.io.version>2.4</commons.io.version>
		<commons.collections.version>3.2.1</commons.collections.version>
		<commons.codec.version>1.6</commons.codec.version>
		<commons.fileupload.version>1.3</commons.fileupload.version>
		<!-- spring -->
		<spring.version>3.1.2.RELEASE</spring.version>
		<aspectjrt.version>1.6.8</aspectjrt.version>
		<aspectjweaver.version>1.6.8</aspectjweaver.version>
		<cglib.nodep.version>2.2.2</cglib.nodep.version>
		<cglib.version>2.2.2</cglib.version>
		<asm.version>3.3.1</asm.version>
		<!-- Other settings -->
		<jstl.version>1.2</jstl.version>
		<jackson.version>1.9.8</jackson.version>
		<new.jackson.version>2.0.4</new.jackson.version>
		<!-- servlet api -->
		<servlet.api.version>2.5</servlet.api.version>
		<!-- jstl el-->
		<jstl.versioin>1.2</jstl.versioin>
		<standard.versioin>1.1.2</standard.versioin>
  </properties>
  
  <repositories>
	<repository>
		<id>Public Repositories</id>
		<name>Public Repositories</name>
		<url>http://localhost:8081/nexus/content/groups/public/</url>
	</repository>
  </repositories>
  <distributionManagement>
	<repository>
		<id>releases</id>
		<name>Local Nexus Repository</name>
		<url>http://127.0.0.1:8081/nexus/content/repositories/releases</url>
	</repository>
	<snapshotRepository>
		<id>snapshots</id>
		<name>Local Nexus Repository</name>
		<url>http://127.0.0.1:8081/nexus/content/repositories/snapshots</url>
	</snapshotRepository>
  </distributionManagement>
  
  <dependencies>
    <!-- 上传文件 general utils -->
  	<dependency> 
		 <groupId>commons-io</groupId> 
		 <artifactId>commons-io</artifactId> 
		 <version>${commons.io.version}</version> 
	</dependency> 
	<dependency> 
		 <groupId>commons-fileupload</groupId> 
		 <artifactId>commons-fileupload</artifactId> 
		 <version>${commons.fileupload.version}</version> 
	</dependency>
	<dependency>
		<groupId>commons-lang</groupId>
		<artifactId>commons-lang</artifactId>
		<version>${commons.lang.version}</version>
	</dependency>
	<dependency>
		<groupId>org.apache.commons</groupId>
		<artifactId>commons-lang3</artifactId>
		<version>${commons.lang3.version}</version>
	</dependency>
	<dependency>
		<groupId>commons-collections</groupId>
		<artifactId>commons-collections</artifactId>
		<version>${commons.collections.version}</version>
	</dependency>
	<dependency>
		<groupId>commons-beanutils</groupId>
		<artifactId>commons-beanutils</artifactId>
		<version>${commons.beanutils.version}</version>
		<exclusions>
			<exclusion>
				<groupId>commons-logging</groupId>
				<artifactId>commons-logging</artifactId>
			</exclusion>
		</exclusions>
	</dependency>
	<dependency>
		<groupId>commons-codec</groupId>
		<artifactId>commons-codec</artifactId>
		<version>${commons.codec.version}</version>
	</dependency>
	<!-- general utils end -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>
    <!-- spring basic -->
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-core</artifactId>
		<version>${spring.version}</version>
		<exclusions>
			<exclusion>
				<groupId>commons-logging</groupId>
				<artifactId>commons-logging</artifactId>
			</exclusion>
		</exclusions>
	</dependency>
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-beans</artifactId>
		<version>${spring.version}</version>
	</dependency>
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-context</artifactId>
		<version>${spring.version}</version>
	</dependency>
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-context-support</artifactId>
		<version>${spring.version}</version>
	</dependency>
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-expression</artifactId>
		<version>${spring.version}</version>
	</dependency>
	<!-- spring tx -->
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-aop</artifactId>
		<version>${spring.version}</version>
	</dependency>
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-tx</artifactId>
		<version>${spring.version}</version>
	</dependency>
	<dependency>
		<groupId>org.aspectj</groupId>
		<artifactId>aspectjrt</artifactId>
		<version>${aspectjrt.version}</version>
	</dependency>
	<dependency>
		<groupId>org.aspectj</groupId>
		<artifactId>aspectjweaver</artifactId>
		<version>${aspectjweaver.version}</version>
	</dependency>
	<dependency>
		<groupId>cglib</groupId>
		<artifactId>cglib-nodep</artifactId>
		<version>${cglib.nodep.version}</version>
	</dependency>
	<dependency>
		<groupId>cglib</groupId>
		<artifactId>cglib</artifactId>
		<version>${cglib.version}</version>
	</dependency>
	<!-- asm -->
	<dependency>
		<groupId>asm</groupId>
		<artifactId>asm</artifactId>
		<version>${asm.version}</version>
	</dependency>
	<!-- spring mvc -->
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-web</artifactId>
		<version>${spring.version}</version>
	</dependency>
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-webmvc</artifactId>
		<version>${spring.version}</version>
	</dependency>
	<!-- SPRING end -->
	<!-- LOGGING begin -->
	<!-- slf4j -->
	<dependency>
		<groupId>org.slf4j</groupId>
		<artifactId>slf4j-api</artifactId>
		<version>${slf4j.version}</version>
	</dependency>
	<!-- slf4j logback绑定 -->
	<!-- 
	<dependency>
		<groupId>ch.qos.logback</groupId>
		<artifactId>logback-classic</artifactId>
		<version>${logback.version}</version>
	</dependency>
	<dependency>
		<groupId>ch.qos.logback</groupId>
		<artifactId>logback-core</artifactId>
		<version>${logback.version}</version>
	</dependency>
	 -->
	<!-- log4jdbc -->
	<!-- log4jdbc is provided by springside repository -->
	<!-- 
	<dependency>
		<groupId>log4jdbc</groupId>
		<artifactId>log4jdbc4</artifactId>
		<version>${log4jdbc4.version}</version>
	</dependency>
	 -->
	<!-- slf4j-log4j绑定 -->
	<dependency>
		<groupId>org.slf4j</groupId>
		<artifactId>slf4j-log4j12</artifactId>
		<version>${slf4j.version}</version>
	</dependency>
	<!-- common-logging 转 slf4j -->
	<dependency>
		<groupId>org.slf4j</groupId>
		<artifactId>jcl-over-slf4j</artifactId>
		<version>${slf4j.version}</version>
	</dependency>
	<!-- log4j -->
	<dependency>
		<groupId>log4j</groupId>
		<artifactId>log4j</artifactId>
		<version>${log4j.version}</version>
	</dependency>
	<!-- LOGGING end -->
	<!-- im4java -->
	<dependency>
		<groupId>org.im4java</groupId>
		<artifactId>im4java</artifactId>
		<version>1.4.0</version>
	</dependency>
	<!-- JSON begin -->
	<dependency>
		<groupId>org.codehaus.jackson</groupId>
		<artifactId>jackson-core-asl</artifactId>
		<version>${jackson.version}</version>
	</dependency>
	<dependency>
		<groupId>org.codehaus.jackson</groupId>
		<artifactId>jackson-mapper-asl</artifactId>
		<version>${jackson.version}</version>
	</dependency>
	<dependency>
		<groupId>org.codehaus.jackson</groupId>
		<artifactId>jackson-jaxrs</artifactId>
		<version>${jackson.version}</version>
	</dependency>
	<dependency>
		<groupId>org.codehaus.jackson</groupId>
		<artifactId>jackson-xc</artifactId>
		<version>${jackson.version}</version>
	</dependency>
	<dependency>
		<groupId>com.fasterxml.jackson.core</groupId>
		<artifactId>jackson-core</artifactId>
		<version>${new.jackson.version}</version>
	</dependency>
	<dependency>
		<groupId>com.fasterxml.jackson.core</groupId>
		<artifactId>jackson-databind</artifactId>
		<version>${new.jackson.version}</version>
	</dependency>
	<dependency>
		<groupId>com.fasterxml.jackson.core</groupId>
		<artifactId>jackson-annotations</artifactId>
		<version>${new.jackson.version}</version>
	</dependency>
	<dependency>
		<groupId>com.fasterxml.jackson.module</groupId>
		<artifactId>jackson-module-jaxb-annotations</artifactId>
		<version>${new.jackson.version}</version>
	</dependency>
	<dependency>
		<groupId>com.fasterxml.jackson.jaxrs</groupId>
		<artifactId>jackson-jaxrs-json-provider</artifactId>
		<version>${new.jackson.version}</version>
	</dependency>
	<!-- JSON end -->
	<dependency>
		<groupId>javax.servlet</groupId>
		<artifactId>servlet-api</artifactId>
		<version>${servlet.api.version}</version>
		<scope>provided</scope>
	</dependency>
	<dependency>
		<groupId>javax.servlet</groupId>
		<artifactId>jstl</artifactId>
		<version>${jstl.versioin}</version>
	</dependency>
	<dependency>
		<groupId>taglibs</groupId>
		<artifactId>standard</artifactId>
		<version>${standard.versioin}</version>
	</dependency>
  </dependencies>
 
<build>
	<finalName>FileServer</finalName>
	<defaultGoal>install</defaultGoal>
	<plugins>
		<!-- compiler插件, 设定JDK版本 -->
		<plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-compiler-plugin</artifactId>
			<version>${maven.compiler.plugin.version}</version>
			<configuration>
				<!--
					configuration:通常用于私有不开源的plugin,不能够详细了解plugin的内部工作原理，但使plugin满足的properties
				-->
				<source>${project.build.jdk.version}</source>
				<target>${project.build.jdk.version}</target>
				<encoding>${project.build.sourceEncoding}</encoding>
			</configuration>
		</plugin>
		<!-- test插件 -->
		<plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-surefire-plugin</artifactId>
			<version>${maven.surefire.plugin.version}</version>
			<configuration>
				<argLine>-Dfile.encoding=UTF-8</argLine>
				<includes>
					<include implementation="java.lang.String">**/*TestAbstract.class</include>
					<include implementation="java.lang.String">**/*Test.class</include>
				</includes>
			</configuration>
		</plugin>
		<plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-failsafe-plugin</artifactId>
			<version>${maven.failsafe.plugin.version}</version>
			<dependencies>
				<dependency>
					<groupId>org.apache.maven.surefire</groupId>
					<artifactId>surefire-junit47</artifactId>
					<version>${surefire.junit47.version}</version>
				</dependency>
			</dependencies>
			<executions>
				<execution>
					<id>integration-test</id>
					<goals>
						<goal>integration-test</goal>
					</goals>
				</execution>
			</executions> 
		</plugin>
		<!-- cobertura插件 -->
		<plugin>
			<groupId>org.codehaus.mojo</groupId>
			<artifactId>cobertura-maven-plugin</artifactId>
			<version>${cobertura.maven.plugin.version}</version>
		</plugin>
		<!-- war插件, 设定war名称不带版本号 -->
		<plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-war-plugin</artifactId>
			<version>${maven.war.plugin.version}</version>
			<configuration>
				<warName>${project.build.finalName}</warName>
				<webResources>
					<resource>
						<directory>${maven.war.plugin.directory}</directory>
						<targetPath>${maven.war.plugin.targetPath}</targetPath>
						<filtering>true</filtering>
					</resource>
				</webResources>
			</configuration>
		</plugin>
		<!-- resource插件, 设定编码 -->
		<plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-resources-plugin</artifactId>
			<version>${maven.resources.plugin.version}</version>
			<configuration>
				<encoding>${project.build.sourceEncoding}</encoding>
			</configuration>
		</plugin>
		<!-- jar相关插件 -->
		<plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-jar-plugin</artifactId>
			<version>${maven.jar.plugin.version}</version>
			<configuration>
				<archive>
					<manifest>
						<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
						<addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
					</manifest>
				</archive>
			</configuration>
		</plugin>
		<plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-source-plugin</artifactId>
			<version>2.1.2</version>
		</plugin>
		<plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-eclipse-plugin</artifactId>
			<version>2.9</version>
			<configuration>
				<additionalProjectnatures>
					<projectnature>org.springframework.ide.eclipse.core.springnature</projectnature>
				</additionalProjectnatures>
				<additionalBuildcommands>
					<buildcommand>org.springframework.ide.eclipse.core.springbuilder</buildcommand>
				</additionalBuildcommands>
				<downloadSources>true</downloadSources>
				<downloadJavadocs>false</downloadJavadocs>
				<wtpversion>2.0</wtpversion>
			</configuration>
		</plugin>
		<!-- deploy插件 -->
		<plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-deploy-plugin</artifactId>
			<version>${maven.deploy.plugin.version}</version>
			<configuration>
				<skip>false</skip>
			</configuration>
		</plugin>
		<!-- jetty插件,设定重载模式 -->
		<plugin>
			<groupId>org.mortbay.jetty</groupId>
			<!-- -->
			<artifactId>jetty-maven-plugin</artifactId>
			 
			<!-- jetty7之前使用如下配置  7之后包括7之后使用如上配置 
			<artifactId>maven-jetty-plugin</artifactId> 
			-->
			<version>${jetty.version}</version>
			<configuration>
				<!-- 
				jetty7之前使用如下配置
				org.mortbay.jetty.ajp.Ajp13SocketConnector
				org.mortbay.jetty.nio.SelectChannelConnector
				
				<connectors>
					<connector implementation="org.mortbay.jetty.nio.SelectChannelConnector">
						<port>8080</port>
						<contextPath>/FileServer</contextPath>
					</connector>
				</connectors>
				-->
				
				<!-- jetty7之后的配置-->
				<webAppConfig>
					<contextPath>/FileServer</contextPath>
				</webAppConfig>
				
				<!--  手动方式-->
				<reload>manual</reload>
				  
				<!-- 每5秒 自动扫描 
				<reload>automatic</reload>
				<scanIntervalSeconds>5</scanIntervalSeconds>
				-->
			</configuration>
			<!-- 
			<dependencies>
				<dependency>
					<groupId>org.mortbay.jetty</groupId>
					<artifactId>jetty-ajp</artifactId>
					<version>${jetty.version}</version>
				</dependency>
			</dependencies>
			 -->
		</plugin>
		<!-- dependency插件 -->
		<plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-dependency-plugin</artifactId>
			<version>2.4</version>
		</plugin>
		<plugin>
			<groupId>org.codehaus.mojo</groupId>
			<artifactId>versions-maven-plugin</artifactId>
			<version>1.3.1</version>
		</plugin>
		<!-- exec java 插件 -->
		<plugin>
			<groupId>org.codehaus.mojo</groupId>
			<artifactId>exec-maven-plugin</artifactId>
			<version>1.2.1</version>
		</plugin>
		<!-- sonar插件 -->
		<plugin>
			<groupId>org.codehaus.mojo</groupId>
			<artifactId>sonar-maven-plugin</artifactId>
			<version>${sonar.maven.plugin.version}</version>
		</plugin>
		<!-- 增加更多的Source和Test Source目录插件 -->
		<plugin>
			<groupId>org.codehaus.mojo</groupId>
			<artifactId>build-helper-maven-plugin</artifactId>
			<version>1.7</version>
		</plugin>
	</plugins>
	<resources>
		<resource>
			<directory>src/main/resources</directory>
			<filtering>true</filtering>
		</resource>
	</resources>
</build>
</project>
